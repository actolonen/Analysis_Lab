---
title: "HPLC: plot chromatograms from .lcd files"
author: "Fermlab"
format: html
editor: visual
toc: TRUE
code-fold: TRUE
embed-resources: TRUE
---

# Setup

```{r setup, echo=FALSE, message=FALSE}

library(knitr);
knitr::opts_chunk$set(warning = F, message = F);
knitr::opts_chunk$set(engine.path = list(perl = "/usr/bin/perl"));

library(chromConverter);
library(stringr);
library(tidyverse);
library(readr);
library(gridExtra);
library(readxl);

mytheme = theme(axis.text.x = element_text(size = 6), 
                axis.text.y = element_text(size = 6), 
                axis.title.x = element_text(size = 8), 
                axis.title.y = element_text(size = 8),
                strip.text.x = element_text(size = 6),
                legend.position = "bottom", 
                aspect.ratio =0.5,
                plot.title = element_text(size = 8),
               );

```

## File I/O

Directories/files used by this script.

```{r file IO}

# directory to read with .lcd files
lcd.input.dir = "/home/tolonen/GenoscopeDrive/LabGroup_Shared/Lab_Projects/HPLC/2024.10.08";

# directory to write chromConverter .txt files.
txt.output.dir = "/home/tolonen/GenoscopeDrive/LabGroup_Shared/Lab_Projects/HPLC/2024.10.08/Chromconverter";

# directory to read sample information file
info.file = "/home/tolonen/GenoscopeDrive/LabGroup_Shared/Lab_Projects/HPLC/2024.10.08/08-10-2024.xlsx";

# output directory for plots
plots.output.dir = "/home/tolonen/GenoscopeDrive/LabGroup_Shared/Lab_Projects/HPLC/2024.10.08/Chromatograms";


```

# Introduction

The objective of this notebook is to compare the chromatograms of samples of a time series of *C. phytofermentans* growing in the fermenters on wheat bran. This notebook uses chromConverter to visualize the HPLC chromatograms from .lcd files. This notebook visualizes the chromatograms using the three detectors of our HPLC:

1.  Detector A (UV) at 210 nm
2.  Detector A (UV) at 260 nm
3.  Detector B (RID)

# Methods

## Convert .lcd to .txt files

ChromConverter to read .lcd files. Output detector B .txt files and a data.frame of all chromatograms.

### Read .lcd files from 2024.10.08

```{r chromConverter to convert .lcd to .txt}

# select sample files for analysis. Ignore 'blanks' files
files.lcd = list.files(path = lcd.input.dir, pattern = ".lcd");

files.lcd.df = data.frame(files.lcd);
files.lcd.df = files.lcd.df %>%
  filter(!grepl("blanc", files.lcd));
files.lcd = dplyr::pull(files.lcd.df, files.lcd);

# declare empty data.frame for all samples
chromatograms.all = data.frame(
                      Minutes = double(),
                      Intensity = double(),
                      Sample = character(), 
                      Detector = character());

for (file in files.lcd) 
{
  inputfile = paste(lcd.input.dir, file, sep = "/");
  inputfile.base = str_replace(string=file, pattern=".lcd", replacement = "");

# declare a data.fram for this sample
chromatograms.sample = data.frame(
                      Minutes = double(),
                      Intensity = double(),
                      Sample = character(), 
                      Detector = character());
  
  data = read_shimadzu_lcd(
     path = inputfile, 
     format_out = "data.frame", 
     data_format = "long", 
     read_metadata = TRUE);
  
  for (detector in data) # foreach detector (data.frame) in the data list
  {
    my.instrument = attr(detector, which = "instrument");
    my.detector = attr(detector, which = "detector");
    my.wavelength = attr(detector, which = "wavelength");
    my.detector = if_else(my.detector == "SPD-20A", true = paste(my.detector, my.wavelength, sep = " "), false = my.detector); 
    detector = detector %>%
      rownames_to_column(var = "Minutes") %>%
      rename(Intensity = int) %>%
      mutate(Sample = inputfile.base) %>%
      mutate(Detector = my.detector);
      chromatograms.sample = rbind(chromatograms.sample, detector); 
   }

chromatograms.all = rbind(chromatograms.all, chromatograms.sample);

# print out chromatogram from this sample to file
chromatogram.file = paste(inputfile.base, ".txt", sep="");
chromatogram.out = paste(txt.output.dir, chromatogram.file, sep="/");
write.table(chromatograms.sample, file = chromatogram.out, row.names=FALSE, sep="\t", col.names=TRUE); 
}

```

## Plot chromatograms for all samples (3 detectors)

```{r plot chromatograms for three detectors for each sample}

# read sample description from info file
sample.data = read_excel(info.file, sheet = "Echantillons", skip=17, col_names = TRUE);

# make title for plot that includes sample info
sample.data = sample.data %>%
  mutate(Sample = str_replace(string=Fichier, pattern=".lcd", replacement = ""));
chromatograms.all.plot = left_join(chromatograms.all, sample.data, by = "Sample");
chromatograms.all.plot = chromatograms.all.plot  %>%
  mutate(Title = paste(Sample, Manip, Time_point, sep = " ")) %>%
  mutate(Minutes = as.numeric(Minutes));

# get list of samples
sample.list = unique(chromatograms.all.plot$Sample);

for(my.sample in sample.list)
{
  # get sample of interest
  chromatogram.plot = chromatograms.all.plot %>%
    filter(Sample == my.sample) %>%
    mutate(Minutes = as.numeric(Minutes));
  
my.plot = ggplot(chromatogram.plot, aes(x=Minutes, y=Intensity)) +
  ggtitle(chromatogram.plot$Title)+
  geom_point(size=0.1) +
  xlab("Time") + 
  ylab("Intensity") +
  coord_cartesian(xlim=c(0,max(chromatogram.plot$Minutes)), ylim=c(0, max(chromatogram.plot$Intensity)))+
  scale_x_continuous(breaks=seq(0, max(chromatogram.plot$Minutes), 4))+
  scale_y_continuous(breaks=seq(0, max(chromatogram.plot$Intensity), max(chromatogram.plot$Intensity/6)))+
  facet_wrap(~ Detector) +
  theme_classic() +
  mytheme;

plot.file = paste(unique(chromatogram.plot$Sample), ".png", sep="");
output.path = paste(plots.output.dir, plot.file, sep="/");
ggsave(filename = output.path, plot = my.plot);
}
  
```

Plots of the chromatograms for the samples are [here](https://drive.google.com/drive/folders/1wRXTRyazQ6zaMufvssWva_dqcrpmHs24).

# Conclusions

Overall, chromatograms look OK. Samples to avoid:

1.  H2: C.phy wheatbran day 0
2.  STD11-625.
